parameters:
  workspace.default: 1

services:
  # Index Factory
  multiversion.entity_index.factory:
    class: Drupal\multiversion\Entity\Index\MultiversionIndexFactory
    arguments: ['@service_container', '@workspace.manager']

  # Index children
  multiversion.entity_index.sequence.scope:
    parent: multiversion.entity_index.sequence
    scope: prototype
  multiversion.entity_index.id.scope:
    parent: multiversion.entity_index.id
    scope: prototype
  multiversion.entity_index.uuid.scope:
    parent: multiversion.entity_index.uuid
    scope: prototype
  multiversion.entity_index.rev.scope:
    parent: multiversion.entity_index.rev
    scope: prototype
  multiversion.entity_index.rev.tree.scope:
    parent: multiversion.entity_index.rev.tree
    scope: prototype

  # Indexes
  multiversion.entity_index.sequence:
    class: Drupal\multiversion\Entity\Index\SequenceIndex
    arguments: ['@keyvalue.sorted_set', '@workspace.manager', '@multiversion.manager']
  multiversion.entity_index.id:
    class: Drupal\multiversion\Entity\Index\EntityIndex
    arguments: ['@keyvalue', '@workspace.manager']
  multiversion.entity_index.uuid:
    class: Drupal\multiversion\Entity\Index\UuidIndex
    arguments: ['@keyvalue', '@workspace.manager']
  multiversion.entity_index.rev:
    class: Drupal\multiversion\Entity\Index\RevisionIndex
    arguments: ['@keyvalue', '@workspace.manager']
  multiversion.entity_index.rev.tree:
    class: Drupal\multiversion\Entity\Index\RevisionTreeIndex
    arguments: ['@keyvalue', '@workspace.manager', '@multiversion.entity_index.factory']

  multiversion.entity.query.sql:
    class: Drupal\multiversion\Entity\Query\Sql\QueryFactory
    arguments: ['@database']
  multiversion.manager:
    class: Drupal\multiversion\MultiversionManager
    arguments: ['@workspace.manager', '@serializer', '@entity.manager', '@state', '@language_manager', '@cache.discovery', '@database', '@entity_field.manager']
    calls:
      - [setContainer, ['@service_container']]
  workspace.manager:
    class: Drupal\multiversion\Workspace\WorkspaceManager
    arguments: ['@request_stack', '@entity.manager', '@current_user', '@logger.channel.workspace']
    tags:
      - { name: service_collector, tag: workspace_negotiator, call: addNegotiator }
  workspace.conflict_tracker:
    class: Drupal\multiversion\Workspace\ConflictTracker
    arguments: ['@keyvalue', '@workspace.manager']
  cache_context.workspace:
    class: Drupal\multiversion\WorkspaceCacheContext
    arguments: ['@workspace.manager']
    tags:
      - { name: cache.context }
  multiversion.stream_wrapper.migrate:
    class: Drupal\multiversion\StreamWrapper\MigrateStream
    tags:
      - { name: stream_wrapper, scheme: migrate }
  logger.channel.workspace:
    parent: logger.channel_base
    arguments: ['cron']

  # @todo: {@link https://www.drupal.org/node/2597414 Simplify the container
  # definition for negotiators.}
  workspace.negotiator.default:
    class: Drupal\multiversion\Workspace\DefaultWorkspaceNegotiator
    calls:
      - [setContainer, ['@service_container']]
      - [setCurrentUser, ['@current_user']]
      - [setWorkspaceManager, ['@workspace.manager']]
    tags:
      - { name: workspace_negotiator, priority: 0 }
  workspace.negotiator.session:
    class: Drupal\multiversion\Workspace\SessionWorkspaceNegotiator
    arguments: ['@user.private_tempstore']
    calls:
      - [setContainer, ['@service_container']]
      - [setCurrentUser, ['@current_user']]
      - [setWorkspaceManager, ['@workspace.manager']]
    tags:
      - { name: workspace_negotiator, priority: 100 }
  conflict.complexlca_resolver:
    class: Drupal\multiversion\Entity\Index\ComplexLcaResolver
    tags:
      - { name: lca_resolver, priority: 20 }
